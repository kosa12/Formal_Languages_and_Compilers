Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: declaration
    5          | assignment
    6          | print_stmt
    7          | read_stmt
    8          | if_stmt
    9          | while_stmt

   10 declaration: type IDENTIFIER SEMICOLON
   11            | type IDENTIFIER ASSIGN CHAR_CONST SEMICOLON
   12            | type IDENTIFIER ASSIGN STRING_CONST SEMICOLON
   13            | type IDENTIFIER ASSIGN expression SEMICOLON
   14            | type IDENTIFIER error

   15 type: INT
   16     | FLOAT
   17     | CHAR
   18     | STRING

   19 assignment: IDENTIFIER ASSIGN expression SEMICOLON
   20           | IDENTIFIER ASSIGN CHAR_CONST SEMICOLON
   21           | IDENTIFIER ASSIGN STRING_CONST SEMICOLON

   22 print_stmt: PRINT IDENTIFIER SEMICOLON

   23 read_stmt: READ IDENTIFIER SEMICOLON

   24 $@1: ε

   25 if_stmt: IF LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET $@1 if_body

   26 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

   27 $@2: ε

   28 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET ELSE $@2 LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

   29 while_stmt: WHILE LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

   30 expression: expression PLUS term
   31           | expression MINUS term
   32           | expression GREATER_THAN term
   33           | expression LESS_THAN term
   34           | term

   35 term: term MUL factor
   36     | term DIVISION factor
   37     | factor

   38 factor: INT_CONST
   39       | FLOAT_CONST
   40       | IDENTIFIER
   41       | LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256) 14
    INT_CONST <intval> (258) 38
    INT <intval> (259) 15
    FLOAT_CONST <floatval> (260) 39
    FLOAT <floatval> (261) 16
    STRING_CONST <strval> (262) 12 21
    IDENTIFIER <strval> (263) 10 11 12 13 14 19 20 21 22 23 40
    CHAR <charval> (264) 17
    CHAR_CONST <strval> (265) 11 20
    STRING <strval> (266) 18
    PLUS (267) 30
    MINUS (268) 31
    MUL (269) 35
    DIVISION (270) 36
    LEFT_ROUND_BRACKET (271) 25 29 41
    RIGHT_ROUND_BRACKET (272) 25 29 41
    LEFT_CURLY_BRACKET (273) 26 28 29
    RIGHT_CURLY_BRACKET (274) 26 28 29
    SEMICOLON (275) 10 11 12 13 19 20 21 22 23
    IF (276) 25
    ELSE (277) 28
    READ (278) 23
    PRINT (279) 22
    ASSIGN (280) 11 12 13 19 20 21
    WHILE (281) 29
    ERROR (282)
    GREATER_THAN (283) 32
    LESS_THAN (284) 33
    IF_THEN (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    statements (33)
        on left: 2 3
        on right: 1 3 26 28 29
    statement (34)
        on left: 4 5 6 7 8 9
        on right: 2 3
    declaration <intval> (35)
        on left: 10 11 12 13 14
        on right: 4
    type <strval> (36)
        on left: 15 16 17 18
        on right: 10 11 12 13 14
    assignment (37)
        on left: 19 20 21
        on right: 5
    print_stmt (38)
        on left: 22
        on right: 6
    read_stmt (39)
        on left: 23
        on right: 7
    if_stmt (40)
        on left: 25
        on right: 8
    $@1 (41)
        on left: 24
        on right: 25
    if_body (42)
        on left: 26 28
        on right: 25
    $@2 (43)
        on left: 27
        on right: 28
    while_stmt (44)
        on left: 29
        on right: 9
    expression <floatval> (45)
        on left: 30 31 32 33 34
        on right: 13 19 25 29 30 31 32 33 41
    term <floatval> (46)
        on left: 35 36 37
        on right: 30 31 32 33 34 35 36
    factor <floatval> (47)
        on left: 38 39 40 41
        on right: 35 36 37


State 0

    0 $accept: • program $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    CHAR        shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    READ        shift, and go to state 7
    PRINT       shift, and go to state 8
    WHILE       shift, and go to state 9

    program      go to state 10
    statements   go to state 11
    statement    go to state 12
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 1

   15 type: INT •

    $default  reduce using rule 15 (type)


State 2

   16 type: FLOAT •

    $default  reduce using rule 16 (type)


State 3

   19 assignment: IDENTIFIER • ASSIGN expression SEMICOLON
   20           | IDENTIFIER • ASSIGN CHAR_CONST SEMICOLON
   21           | IDENTIFIER • ASSIGN STRING_CONST SEMICOLON

    ASSIGN  shift, and go to state 20


State 4

   17 type: CHAR •

    $default  reduce using rule 17 (type)


State 5

   18 type: STRING •

    $default  reduce using rule 18 (type)


State 6

   25 if_stmt: IF • LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET $@1 if_body

    LEFT_ROUND_BRACKET  shift, and go to state 21


State 7

   23 read_stmt: READ • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 22


State 8

   22 print_stmt: PRINT • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 23


State 9

   29 while_stmt: WHILE • LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 24


State 10

    0 $accept: program • $end

    $end  shift, and go to state 25


State 11

    1 program: statements •
    3 statements: statements • statement

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    CHAR        shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    READ        shift, and go to state 7
    PRINT       shift, and go to state 8
    WHILE       shift, and go to state 9

    $default  reduce using rule 1 (program)

    statement    go to state 26
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 12

    2 statements: statement •

    $default  reduce using rule 2 (statements)


State 13

    4 statement: declaration •

    $default  reduce using rule 4 (statement)


State 14

   10 declaration: type • IDENTIFIER SEMICOLON
   11            | type • IDENTIFIER ASSIGN CHAR_CONST SEMICOLON
   12            | type • IDENTIFIER ASSIGN STRING_CONST SEMICOLON
   13            | type • IDENTIFIER ASSIGN expression SEMICOLON
   14            | type • IDENTIFIER error

    IDENTIFIER  shift, and go to state 27


State 15

    5 statement: assignment •

    $default  reduce using rule 5 (statement)


State 16

    6 statement: print_stmt •

    $default  reduce using rule 6 (statement)


State 17

    7 statement: read_stmt •

    $default  reduce using rule 7 (statement)


State 18

    8 statement: if_stmt •

    $default  reduce using rule 8 (statement)


State 19

    9 statement: while_stmt •

    $default  reduce using rule 9 (statement)


State 20

   19 assignment: IDENTIFIER ASSIGN • expression SEMICOLON
   20           | IDENTIFIER ASSIGN • CHAR_CONST SEMICOLON
   21           | IDENTIFIER ASSIGN • STRING_CONST SEMICOLON

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    STRING_CONST        shift, and go to state 30
    IDENTIFIER          shift, and go to state 31
    CHAR_CONST          shift, and go to state 32
    LEFT_ROUND_BRACKET  shift, and go to state 33

    expression  go to state 34
    term        go to state 35
    factor      go to state 36


State 21

   25 if_stmt: IF LEFT_ROUND_BRACKET • expression RIGHT_ROUND_BRACKET $@1 if_body

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    expression  go to state 37
    term        go to state 35
    factor      go to state 36


State 22

   23 read_stmt: READ IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 38


State 23

   22 print_stmt: PRINT IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 39


State 24

   29 while_stmt: WHILE LEFT_ROUND_BRACKET • expression RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    expression  go to state 40
    term        go to state 35
    factor      go to state 36


State 25

    0 $accept: program $end •

    $default  accept


State 26

    3 statements: statements statement •

    $default  reduce using rule 3 (statements)


State 27

   10 declaration: type IDENTIFIER • SEMICOLON
   11            | type IDENTIFIER • ASSIGN CHAR_CONST SEMICOLON
   12            | type IDENTIFIER • ASSIGN STRING_CONST SEMICOLON
   13            | type IDENTIFIER • ASSIGN expression SEMICOLON
   14            | type IDENTIFIER • error

    error      shift, and go to state 41
    SEMICOLON  shift, and go to state 42
    ASSIGN     shift, and go to state 43


State 28

   38 factor: INT_CONST •

    $default  reduce using rule 38 (factor)


State 29

   39 factor: FLOAT_CONST •

    $default  reduce using rule 39 (factor)


State 30

   21 assignment: IDENTIFIER ASSIGN STRING_CONST • SEMICOLON

    SEMICOLON  shift, and go to state 44


State 31

   40 factor: IDENTIFIER •

    $default  reduce using rule 40 (factor)


State 32

   20 assignment: IDENTIFIER ASSIGN CHAR_CONST • SEMICOLON

    SEMICOLON  shift, and go to state 45


State 33

   41 factor: LEFT_ROUND_BRACKET • expression RIGHT_ROUND_BRACKET

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    expression  go to state 46
    term        go to state 35
    factor      go to state 36


State 34

   19 assignment: IDENTIFIER ASSIGN expression • SEMICOLON
   30 expression: expression • PLUS term
   31           | expression • MINUS term
   32           | expression • GREATER_THAN term
   33           | expression • LESS_THAN term

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    SEMICOLON     shift, and go to state 49
    GREATER_THAN  shift, and go to state 50
    LESS_THAN     shift, and go to state 51


State 35

   34 expression: term •
   35 term: term • MUL factor
   36     | term • DIVISION factor

    MUL       shift, and go to state 52
    DIVISION  shift, and go to state 53

    $default  reduce using rule 34 (expression)


State 36

   37 term: factor •

    $default  reduce using rule 37 (term)


State 37

   25 if_stmt: IF LEFT_ROUND_BRACKET expression • RIGHT_ROUND_BRACKET $@1 if_body
   30 expression: expression • PLUS term
   31           | expression • MINUS term
   32           | expression • GREATER_THAN term
   33           | expression • LESS_THAN term

    PLUS                 shift, and go to state 47
    MINUS                shift, and go to state 48
    RIGHT_ROUND_BRACKET  shift, and go to state 54
    GREATER_THAN         shift, and go to state 50
    LESS_THAN            shift, and go to state 51


State 38

   23 read_stmt: READ IDENTIFIER SEMICOLON •

    $default  reduce using rule 23 (read_stmt)


State 39

   22 print_stmt: PRINT IDENTIFIER SEMICOLON •

    $default  reduce using rule 22 (print_stmt)


State 40

   29 while_stmt: WHILE LEFT_ROUND_BRACKET expression • RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET
   30 expression: expression • PLUS term
   31           | expression • MINUS term
   32           | expression • GREATER_THAN term
   33           | expression • LESS_THAN term

    PLUS                 shift, and go to state 47
    MINUS                shift, and go to state 48
    RIGHT_ROUND_BRACKET  shift, and go to state 55
    GREATER_THAN         shift, and go to state 50
    LESS_THAN            shift, and go to state 51


State 41

   14 declaration: type IDENTIFIER error •

    $default  reduce using rule 14 (declaration)


State 42

   10 declaration: type IDENTIFIER SEMICOLON •

    $default  reduce using rule 10 (declaration)


State 43

   11 declaration: type IDENTIFIER ASSIGN • CHAR_CONST SEMICOLON
   12            | type IDENTIFIER ASSIGN • STRING_CONST SEMICOLON
   13            | type IDENTIFIER ASSIGN • expression SEMICOLON

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    STRING_CONST        shift, and go to state 56
    IDENTIFIER          shift, and go to state 31
    CHAR_CONST          shift, and go to state 57
    LEFT_ROUND_BRACKET  shift, and go to state 33

    expression  go to state 58
    term        go to state 35
    factor      go to state 36


State 44

   21 assignment: IDENTIFIER ASSIGN STRING_CONST SEMICOLON •

    $default  reduce using rule 21 (assignment)


State 45

   20 assignment: IDENTIFIER ASSIGN CHAR_CONST SEMICOLON •

    $default  reduce using rule 20 (assignment)


State 46

   30 expression: expression • PLUS term
   31           | expression • MINUS term
   32           | expression • GREATER_THAN term
   33           | expression • LESS_THAN term
   41 factor: LEFT_ROUND_BRACKET expression • RIGHT_ROUND_BRACKET

    PLUS                 shift, and go to state 47
    MINUS                shift, and go to state 48
    RIGHT_ROUND_BRACKET  shift, and go to state 59
    GREATER_THAN         shift, and go to state 50
    LESS_THAN            shift, and go to state 51


State 47

   30 expression: expression PLUS • term

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    term    go to state 60
    factor  go to state 36


State 48

   31 expression: expression MINUS • term

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    term    go to state 61
    factor  go to state 36


State 49

   19 assignment: IDENTIFIER ASSIGN expression SEMICOLON •

    $default  reduce using rule 19 (assignment)


State 50

   32 expression: expression GREATER_THAN • term

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    term    go to state 62
    factor  go to state 36


State 51

   33 expression: expression LESS_THAN • term

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    term    go to state 63
    factor  go to state 36


State 52

   35 term: term MUL • factor

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    factor  go to state 64


State 53

   36 term: term DIVISION • factor

    INT_CONST           shift, and go to state 28
    FLOAT_CONST         shift, and go to state 29
    IDENTIFIER          shift, and go to state 31
    LEFT_ROUND_BRACKET  shift, and go to state 33

    factor  go to state 65


State 54

   25 if_stmt: IF LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET • $@1 if_body

    $default  reduce using rule 24 ($@1)

    $@1  go to state 66


State 55

   29 while_stmt: WHILE LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET • LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 67


State 56

   12 declaration: type IDENTIFIER ASSIGN STRING_CONST • SEMICOLON

    SEMICOLON  shift, and go to state 68


State 57

   11 declaration: type IDENTIFIER ASSIGN CHAR_CONST • SEMICOLON

    SEMICOLON  shift, and go to state 69


State 58

   13 declaration: type IDENTIFIER ASSIGN expression • SEMICOLON
   30 expression: expression • PLUS term
   31           | expression • MINUS term
   32           | expression • GREATER_THAN term
   33           | expression • LESS_THAN term

    PLUS          shift, and go to state 47
    MINUS         shift, and go to state 48
    SEMICOLON     shift, and go to state 70
    GREATER_THAN  shift, and go to state 50
    LESS_THAN     shift, and go to state 51


State 59

   41 factor: LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET •

    $default  reduce using rule 41 (factor)


State 60

   30 expression: expression PLUS term •
   35 term: term • MUL factor
   36     | term • DIVISION factor

    MUL       shift, and go to state 52
    DIVISION  shift, and go to state 53

    $default  reduce using rule 30 (expression)


State 61

   31 expression: expression MINUS term •
   35 term: term • MUL factor
   36     | term • DIVISION factor

    MUL       shift, and go to state 52
    DIVISION  shift, and go to state 53

    $default  reduce using rule 31 (expression)


State 62

   32 expression: expression GREATER_THAN term •
   35 term: term • MUL factor
   36     | term • DIVISION factor

    MUL       shift, and go to state 52
    DIVISION  shift, and go to state 53

    $default  reduce using rule 32 (expression)


State 63

   33 expression: expression LESS_THAN term •
   35 term: term • MUL factor
   36     | term • DIVISION factor

    MUL       shift, and go to state 52
    DIVISION  shift, and go to state 53

    $default  reduce using rule 33 (expression)


State 64

   35 term: term MUL factor •

    $default  reduce using rule 35 (term)


State 65

   36 term: term DIVISION factor •

    $default  reduce using rule 36 (term)


State 66

   25 if_stmt: IF LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET $@1 • if_body

    LEFT_CURLY_BRACKET  shift, and go to state 71

    if_body  go to state 72


State 67

   29 while_stmt: WHILE LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET • statements RIGHT_CURLY_BRACKET

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    CHAR        shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    READ        shift, and go to state 7
    PRINT       shift, and go to state 8
    WHILE       shift, and go to state 9

    statements   go to state 73
    statement    go to state 12
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 68

   12 declaration: type IDENTIFIER ASSIGN STRING_CONST SEMICOLON •

    $default  reduce using rule 12 (declaration)


State 69

   11 declaration: type IDENTIFIER ASSIGN CHAR_CONST SEMICOLON •

    $default  reduce using rule 11 (declaration)


State 70

   13 declaration: type IDENTIFIER ASSIGN expression SEMICOLON •

    $default  reduce using rule 13 (declaration)


State 71

   26 if_body: LEFT_CURLY_BRACKET • statements RIGHT_CURLY_BRACKET
   28        | LEFT_CURLY_BRACKET • statements RIGHT_CURLY_BRACKET ELSE $@2 LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    CHAR        shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    READ        shift, and go to state 7
    PRINT       shift, and go to state 8
    WHILE       shift, and go to state 9

    statements   go to state 74
    statement    go to state 12
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 72

   25 if_stmt: IF LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET $@1 if_body •

    $default  reduce using rule 25 (if_stmt)


State 73

    3 statements: statements • statement
   29 while_stmt: WHILE LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements • RIGHT_CURLY_BRACKET

    INT                  shift, and go to state 1
    FLOAT                shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    CHAR                 shift, and go to state 4
    STRING               shift, and go to state 5
    RIGHT_CURLY_BRACKET  shift, and go to state 75
    IF                   shift, and go to state 6
    READ                 shift, and go to state 7
    PRINT                shift, and go to state 8
    WHILE                shift, and go to state 9

    statement    go to state 26
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 74

    3 statements: statements • statement
   26 if_body: LEFT_CURLY_BRACKET statements • RIGHT_CURLY_BRACKET
   28        | LEFT_CURLY_BRACKET statements • RIGHT_CURLY_BRACKET ELSE $@2 LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    INT                  shift, and go to state 1
    FLOAT                shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    CHAR                 shift, and go to state 4
    STRING               shift, and go to state 5
    RIGHT_CURLY_BRACKET  shift, and go to state 76
    IF                   shift, and go to state 6
    READ                 shift, and go to state 7
    PRINT                shift, and go to state 8
    WHILE                shift, and go to state 9

    statement    go to state 26
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 75

   29 while_stmt: WHILE LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET •

    $default  reduce using rule 29 (while_stmt)


State 76

   26 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET •
   28        | LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET • ELSE $@2 LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    ELSE  shift, and go to state 77

    $default  reduce using rule 26 (if_body)


State 77

   28 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET ELSE • $@2 LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    $default  reduce using rule 27 ($@2)

    $@2  go to state 78


State 78

   28 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET ELSE $@2 • LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 79


State 79

   28 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET ELSE $@2 LEFT_CURLY_BRACKET • statements RIGHT_CURLY_BRACKET

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    IDENTIFIER  shift, and go to state 3
    CHAR        shift, and go to state 4
    STRING      shift, and go to state 5
    IF          shift, and go to state 6
    READ        shift, and go to state 7
    PRINT       shift, and go to state 8
    WHILE       shift, and go to state 9

    statements   go to state 80
    statement    go to state 12
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 80

    3 statements: statements • statement
   28 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET ELSE $@2 LEFT_CURLY_BRACKET statements • RIGHT_CURLY_BRACKET

    INT                  shift, and go to state 1
    FLOAT                shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    CHAR                 shift, and go to state 4
    STRING               shift, and go to state 5
    RIGHT_CURLY_BRACKET  shift, and go to state 81
    IF                   shift, and go to state 6
    READ                 shift, and go to state 7
    PRINT                shift, and go to state 8
    WHILE                shift, and go to state 9

    statement    go to state 26
    declaration  go to state 13
    type         go to state 14
    assignment   go to state 15
    print_stmt   go to state 16
    read_stmt    go to state 17
    if_stmt      go to state 18
    while_stmt   go to state 19


State 81

   28 if_body: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET ELSE $@2 LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET •

    $default  reduce using rule 28 (if_body)
